{"body":"twei\r\n====\r\n\r\ntwei 是用 [node.js][0] 编写的微博命令行工具. 目前支持新浪微博的查看与发送.\r\n\r\n## 环境\r\n\r\ntwei 适用于所有可运行 node.js 的环境, 包括 _windows, linux, mac os(未测试), cygwin_ 等.\r\n\r\n## 安装\r\n\r\n  1. 安装 [node.js][1]\r\n  2. 在命令行中: `npm install -g twei`\r\n  3. `twei --version`\r\n  \r\n## 使用\r\n\r\n```\r\n\r\n  nodejs 命令行微博工具\r\n    \r\n  Usage: twei [command]\r\n    \r\n  Command:\r\n    默认的命令包括: \r\n    authorize, execute, help, \r\n    comment, follow, followers, unfollow, update, repost,\r\n    status, user, hot\r\n\r\n  Example:\r\n    twei update 雨一直下个不停\r\n    twei update \"你好, 世界\" -i ../example.png -c 114.169938,22.559385\r\n\r\n```\r\n\r\n## 测试\r\n\r\n  `npm test`\r\n  \r\n## access_token\r\n\r\n  由于新浪的 [api 限制][2], 目前的 access_token 只有数天的有效期. Access_token 过期后需要输入你[重新授权][6]后的新 access_token. \r\n\r\n## 示例\r\n\r\n  - 更新微博\r\n  \r\n    - 发微博: twei update 雨一直下个不停\r\n    - 发带网络图片的微博: twei update 雨一直下个不停 -i http://example/example.png\r\n    - 发带本地图片的微博: twei update 雨一直下个不停 -i ./example.png\r\n    \r\n  - timeline\r\n  \r\n    - 查看自己的微博: twei timeline\r\n    - 查看某人的微博: twei timeline sheepmaker\r\n    - 查看收到的微博: twei timeline.friends\r\n    - 查看@你的微博: twei timeline.mentions\r\n    \r\n  - 查看某人信息: twei user sheepmaker\r\n  - 查看某人的粉丝: twei followers sheepmaker\r\n  - 查看 follow 那些人: twei friends sheepmaker\r\n  - follow 某人: twei follow sheepmaker\r\n  - 评论\r\n  \r\n    - 查看某条微博的评论: twei comments {{id}}\r\n    - 评论微博: twei comment {{id}} {{comment}}\r\n    - 删除评论: twei comment.remove {{id}}\r\n    - 回复评论: twei comment.reply {{id}} {{cid}} {{comment}}\r\n    \r\n## execute\r\n\r\n  相比上面的示例, twei 提供了功能更为完整的微博命令行接口 execute. 使用 execute 命令可以执行较为完整的微博 api 接口.\r\n  \r\n  Usage: `twei execute {{apistr}} {{querystring}}`\r\n  \r\n### apistr & querystring:\r\n\r\n  twei 将[新浪微博的接口][4] 转接成 group.name 的 apistr 形式. 使用 [twei api][5], 在命令行中即可直接操作微博的接口.\r\n  \r\n  querystring 是 apistr 的请求参数. querystring 可以是普通的请求字符串格式(uid=1488292340), 如果该条 api 定义了expect, querysting 可以省去请求参数头部分(前例中的 \"uid=\" 部分). 完整的 querysting 请参考新浪微博的[接口][4]\r\n  \r\n  Usage: `twei timeline.home count=2 page=2` or `twei timeline.home \"count=2&page=2\"`, \r\n         `twei execute statuses.user sheepmaker count=5 page=2 feature=1` \r\n\r\n### --force(TODO)\r\n\r\n  [twei api][5] 并未列出所有的微博 api, 如果你需要操作 twei 未包含的 api, 可以使用 `--force` 参数.\r\n  \r\n  Usage: `twei execute users/show screen_name=sheepmaker --force`\r\n  \r\n## alias & shower\r\n\r\n  alias 和 shower 是 twei 提供的自定义命令和样式功能. \r\n  \r\n  - [command alias][7] 可以将常用命令改写成较短的命令. \r\n  - 默认的 twei 只提供了有限类型的数据. 通过 shower 则可以自定义内容的显示样式. 自定义的 shower 可以通过 `--shower` 指定使用.\r\n    Example: `twei timeline --shower base`\r\n\r\n\r\n    \r\n\r\n[0]: http://nodejs.org/\r\n[1]: http://nodejs.org/#download\r\n[2]: http://open.weibo.com/wiki/Oauth2#.E8.BF.87.E6.9C.9F.E6.97.B6.E9.97.B4\r\n[4]: http://open.weibo.com/wiki/API%E6%96%87%E6%A1%A3_V2\r\n[5]: https://github.com/justan/twei/blob/master/lib/api/tsina.js\r\n[6]: https://api.weibo.com/oauth2/authorize?client_id=3811884266&redirect_uri=http%3A%2F%2Fprojects.whosemind.net%2Ftwei%2Ftsina_access_token.html&response_type=token\r\n[7]: https://github.com/justan/twei/blob/master/lib/user_alias/alias.example.js","tagline":"微博命令行工具","google":"UA-12642431-5","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Twei"}